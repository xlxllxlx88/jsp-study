1. <jsp:useBean> 액션 태그(action tag)

​

1) 문법 형식(syntax)

​

 <jsp:useBean id="[자바빈 객체(인스턴스)명]" class="[자바빈 패키지/클래스명]"   scope="[범위]" />

​

​

- id : 자바빈 인스턴스명

- class :  패키지를 포함한 자바빈 클래스명

- scope : 자바빈 객체 저장 영역 지정. page, request, session, application 중 택일 기본값= page.

​

주의) page는 JSP 기본 객체의 pageContext 객체에 해당됨.

​

: 클래스 인스턴스 =  new 생성자() 와 같은 개념으로 객체 생성됨.

​

2) <jsp:setProperty>, <jsp:getProperty>

: 각각 자바빈 클래스 멤버 필드들의 setter(set method), getter(get method)에 해당됨.

 

 <jsp:setProperty name="객체명" property="속성(필드)명" value="값"  />

​

 <jsp:setProperty name="객체명" property="속성(필드)명" param="파라미터(인자)명"  />

​

 <jsp:setProperty name="객체명" property="*" />

​

param 속성의 경우는 Java Bean의 필드명과 폼(form) 필드의 인자명(name)이 다를 경우에 사용할 수 있습니다.

param은 request.getParameter("인자명")에서의 인자명에 해당됩니다.

​

"*" 는 모든 필드(속성)들을 의미합니다.

​

ex)

​

폼 필드 : <input type="text" id="address" name="memberAddress" />

인자 수신 : <jsp:setProperty name="demoVO" property="address" param="memberAddress" />

​

 <jsp:getProperty name="자바빈" property="프로퍼티(속성, 멤버 필드명)" />

​

2. form : 인자 전송

​

<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>

<!DOCTYPE html>

<html lang="ko">

<head>

<meta charset="UTF-8">

<title>form</title>

</head>

<body>

 

    <form method="post" action="action.jsp">

   

        <label for="id">

            아이디 : <input type="text" id="id" name="id" />

        </label><br />

       

        <label for="name">

            이름 : <input type="text" id="name" name="name" />

        </label><br />

       

        <label for="address">

            주소 : <input type="text" id="address" name="address" />

        </label><br />

       

        취미 :<br>

        <input type="checkbox" name="hobbies" value="야구"> 야구<br>   

        <input type="checkbox" name="hobbies" value="축구"> 축구<br>

        <input type="checkbox" name="hobbies" value="배구"> 배구<br>

        <input type="checkbox" name="hobbies" value="농구"> 농구<br>

       

        <input type="submit" value="전송" />

       

    </form>

 

</body>

</html>

​

3. Java Bean : VO

​

package bean;

 

import java.util.Arrays;

 

public class DemoVO {

   

    private String id;

    private String name;

    private String address;

    private String[] hobbies;

   

    @Override

    public String toString() {

        return String.format("DemoVO [id=%s, name=%s, address=%s, hobbies=%s]", id, name, address,

                Arrays.toString(hobbies));

    }

 

    public String getId() {

        return id;

    }

 

    public void setId(String id) {

        this.id = id;

    }

 

    public String getName() {

        return name;

    }

 

    public void setName(String name) {

        this.name = name;

    }

 

    public String getAddress() {

        return address;

    }

 

    public void setAddress(String address) {

        this.address = address;

    }

 

    public String[] getHobbies() {

        return hobbies;

    }

 

    public void setHobbies(String[] hobbies) {

        this.hobbies = hobbies;

    }

   

}

​

4. action : 인자 처리

​

1) <jsp:useBean> 액션 태그 활용

​

<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8" %>

<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>

<%

    request.setCharacterEncoding("UTF-8");

%>

<!DOCTYPE html>

<html lang="ko">

<head>

<meta charset="UTF-8">

<title>action</title>

</head>

<body>

   

    <!-- 인자 수신 -->

    <jsp:useBean id="demoVO" class="bean.DemoVO" scope="request">

        - 인자 일괄 할당 :<br />

        <jsp:setProperty name="demoVO" property="*" />

       

        <!-- - 인자 개별 할당 :<br /> -->

        <%--    

        <jsp:setProperty name="demoVO" property="id"  value="jsp" />

        <jsp:setProperty name="demoVO" property="name" value="홍길동" />

        <jsp:setProperty name="demoVO" property="address" value="역삼동" />

         --%>

    </jsp:useBean>

   

    <!-- 인자 출력 -->

    JSP expression(표현식) : <%= demoVO.getId() %><br />

    JSP 액션 태그 : <jsp:getProperty name="demoVO" property="id" /><br />

    EL 방식 출력-1 : ${demoVO.id}<br />

    EL 방식 출력-2 : ${demoVO.getId()}

   

    <hr>

    <jsp:getProperty name="demoVO" property="hobbies" /><br />

   

    <!-- JSTL -->

    <c:forEach var="hobby" items="${demoVO.hobbies}">

        ${hobby}<br>

    </c:forEach>

   

</body>

</html>

​

2) 기존 인자 전송 방식 처리

​

<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8" %>

<%@ page import="java.util.*" %>

<!DOCTYPE html>

<html lang="ko">

<head>

<meta charset="UTF-8">

<title>action</title>

</head>

<body>

<%

    request.setCharacterEncoding("UTF-8"); // 인자 인코딩

    Enumeration<String> em = request.getParameterNames();

   

    while (em.hasMoreElements()) {

        String key = em.nextElement();

        String[] val = request.getParameterValues(key);

       

        if (val.length == 1) {

           

            out.print(key + "=" + val[0] + "<br>");

           

        } else {

           

            for (String s : val) {

                out.println(key + "=" + s + "<br>");

            }

           

        } //

       

    } //

%>     

</body>

</html>

​

<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8" %>

<%@ page import="java.util.*" %>

<!DOCTYPE html>

<html lang="ko">

<head>

<meta charset="UTF-8">

<title>action</title>

</head>

<body>

<%

    request.setCharacterEncoding("UTF-8"); // 인자 인코딩

    Map<String, String[]> map = request.getParameterMap();

   

    // map.forEach((k,v)->System.out.println(k+"="+v[0]));

   

    Set<String> set = map.keySet();

    Iterator<String> it = set.iterator();

   

    while (it.hasNext()) {

        String key = it.next();

        String[] val = map.get(key);

       

        if (val.length == 1) {

           

            out.print(key + "=" + val[0] + "<br>");

           

        } else {

           

            for (String s : val) {

                out.println(key + "=" + s + "<br>");

            }

           

        } //

    }

%>     

</body>

</html>

​

3) param 속성 활용 인자 전송/수신 예시

​

<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>

<!DOCTYPE html>

<html lang="ko">

<head>

<meta charset="UTF-8">

<title>form</title>

</head>

<body>

 

    <form method="post" action="action1.jsp">

   

        <label for="id">

            아이디 : <input type="text" id="id" name="memberId" />

        </label><br />

       

        <label for="name">

            이름 : <input type="text" id="name" name="memberName" />

        </label><br />

       

        <label for="address">

            주소 : <input type="text" id="address" name="memberAddress" />

        </label><br />

       

        취미 :<br>

        <input type="checkbox" name="memberHobbies" value="야구"> 야구<br> 

        <input type="checkbox" name="memberHobbies" value="축구"> 축구<br>

        <input type="checkbox" name="memberHobbies" value="배구"> 배구<br>

        <input type="checkbox" name="memberHobbies" value="농구"> 농구<br>

       

        <input type="submit" value="전송" />

       

    </form>

 

</body>

</html>

​

<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8" %>

<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>

<%

    request.setCharacterEncoding("UTF-8");

%>

<!DOCTYPE html>

<html lang="ko">

<head>

<meta charset="UTF-8">

<title>action</title>

</head>

<body>

   

    <!-- 인자 수신 -->

    <jsp:useBean id="demoVO" class="bean.DemoVO" scope="request">

 

        <!-- - 인자 개별 할당 :<br /> -->

        <jsp:setProperty name="demoVO" property="id" param="memberId" />

        <jsp:setProperty name="demoVO" property="name" param="memberName"  />

        <jsp:setProperty name="demoVO" property="address" param="memberAddress" />

        <jsp:setProperty name="demoVO" property="hobbies" param="memberHobbies" />

       

    </jsp:useBean>

   

    id : <jsp:getProperty name="demoVO" property="id" /><br />

    name : <jsp:getProperty name="demoVO" property="name" /><br />

    address : <jsp:getProperty name="demoVO" property="address" /><br />

   

    <!-- JSTL -->

    hobbies : <br>

    <c:forEach var="hobby" items="${demoVO.hobbies}">

        ${hobby}<br>

    </c:forEach>

   

</body>

</html>